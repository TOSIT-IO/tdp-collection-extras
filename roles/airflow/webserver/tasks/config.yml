---
- name: Airflow Database Init
  shell: "{{ airflow_executable }} db init"
  environment:
    AIRFLOW_HOME: "{{ airflow_install_dir }}"

- name: Admin and users
  shell: |
    "{{ airflow_executable }}" users create \
      --username {{ item.username }} \
      --password {{ item.password }} \
      --role {{ item.role }} \
      --firstname {{ item.firstname }} \
      --lastname {{ item.lastname }} \
      --email {{ item.email }}
  with_items: "{{ airflow_admin + (airflow_users if airflow_users is defined else []) }}"
  environment:
    AIRFLOW_HOME: "{{ airflow_install_dir }}"

- name: Template webserver_config.py file
  template:
    src: webserver_config.py.j2
    dest: "{{ airflow_install_dir }}/webserver_config.py"

- name: Template Airflow webserver service file
  template:
    src: airflow-webserver.service.j2
    dest: /usr/lib/systemd/system/airflow-webserver.service

- name: Airflow | Delete connections
  command: "{{ airflow_executable }} connections delete {{ item.conn_id }}"
  with_items: "{{ airflow_connections }}"
  environment:
    AIRFLOW_HOME: "{{ airflow_install_dir }}"
  when: airflow_connections_reset
  ignore_errors: true

- name: Airflow | Add connections
  shell: >
    "{{ airflow_executable }}" connections add {{ item.conn_id }}
    {%- for key, value in item.items() if key != 'conn_id' %}
    --{{ key }} {{ value }}
    {%- endfor %}
  with_items: "{{ airflow_connections }}"
  environment:
    AIRFLOW_HOME: "{{ airflow_install_dir }}"
  ignore_errors: true

- name: Template Airflow flower service file
  template:
    src: airflow-flower.service.j2
    dest: /usr/lib/systemd/system/airflow-flower.service
