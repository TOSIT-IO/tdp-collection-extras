---
# --- kdc setup --- #

- name: Template kdc.conf
  template:
    src: kdc.conf.j2
    dest: /var/kerberos/krb5kdc/kdc.conf
  notify: restart krb5kdc

- name: Ensures directory for password stash exists
  file:
    path: "{{ ldap_password_file | dirname }}"
    state: directory

# The template is equivalent to :
# kdb5_ldap_util stashsrvpw -f {{ ldap_password_file }} {{ kdc_service_dn }}
# kdb5_ldap_util stashsrvpw -f {{ ldap_password_file }} {{ kadmin_service_dn }}
- name: Template stash ldap creds
  template:
    src: kerberos_ldap_creds.j2
    dest: "{{ ldap_password_file }}"
    owner: root
    group: root
    mode: '0600'
  notify:
    - restart krb5kdc
    - restart kadmin

- name: Create realm in LDAP
  command: kdb5_ldap_util -D {{ ldap_admin_dn }} -w {{ ldap_admin_dn_password }} create -subtrees {{ ldap_suffix }} -r {{ realm }} -s -P {{ kerberos_db_master_key }} -H ldapi:///
  args:
    creates: "/var/kerberos/krb5kdc/.k5.{{ realm }}"

- name: Start and enable KDC
  service:
    name: krb5kdc
    state: started
    enabled: yes

# --- kadmin setup --- #

- name: Template kadm5.acl
  template:
    src: kadm5.acl.j2
    dest: /var/kerberos/krb5kdc/kadm5.acl  
  notify: restart kadmin

- name: Start and enable kadmin
  service:
    name: kadmin
    state: started
    enabled: yes

# --- Admin account --- #

- name: Create admin/admin principal
  command: kadmin.local -q "addprinc -pw {{ kerberos_admin_password }} {{ kerberos_admin_principal }}"
  register: reg_addprinc
  failed_when: |
    reg_addprinc is failed or 
    "Principal \"" + kerberos_admin_principal + "\" created." not in reg_addprinc.stdout and
    "already exists" not in reg_addprinc.stderr
  changed_when: "'already exists' not in reg_addprinc.stderr"
